import "aaa" Data.List
import "bbb" Data.Applicative.Hello
import "bbb" DA.Time
import "ccc" DA.Traversable
import Data.Query.Lang ()
import "aaa" Data.Core.Cap
import Apple  ()
import Data.Apple()
import Data.List
import Bat ()
import Zoo ()
import Data.Text ()
import "bbb" DA.Text ()
import "bbb" DA.Action ()
import "aaa" DA.Action.Main ()
import DA.Action.App.Main ()
import Data.Applicative.Hello
import DA.Time
import DA.Traversable
import "ccc" DA.Cat
import Data.List qualified




import Data.Applicative.Hello qualified
import DA.Time qualified
import "ccc" DA.Apple
import DA.Traversable qualified
import Data.Queue qualified as Q ((<<<=), many, take, cat, egg, atlas, Time(..), (!<), Day(Sun, Mon, Wed, Fri, Sat, Thur, Tue), Week)
import "ccc" DA.Adelaide
import DA.Prelude ()
import Data.List as L
import Data.Applicative.C qualified as B
import Data.Applicative qualified as App
import "aaa" Data.Applicative qualified as App (Month(Ca, Cd, Bd, Ba, Aq, Aa, Am), App(..), Order, Base, House(Residential, Commercial, Retail))
import "bbb" Data.Functor qualified as F
import Data.App.Apple qualified as A ((<<<=), any, ba, dog, acting,
actor, ant, Bart (..), zoo, Apple (..), Queue, Month(Mar, Feb, Jan, Apr, Aug), Year(..), bed, bandaid, (!<!>!))
import Data.Monad ()
import DA.Apex.B
import DA.Apex.A
import Data.Test.Queue qualified as A hiding (d, e, ap)
import Data.App.Apple.Hide qualified as Hi hiding ((<<<=), any, ba, dog, acting,
actor, ant, Bart (..), zoo, Apple (..), Queue, Month(Mar, Feb, Jan, Apr, Aug), Year(..), bed, bandaid, (!<!>!))
