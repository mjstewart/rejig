-- rejig formatting example


module Main.MyApp where



import DA.Foldable (mapA_)
        import DA.Optional( catOptionals, fromSomeNote)
import Main.MyApp.Currency (USD, NZD, EUR, AUD, convert)
import Base.Utils
import DA.Action ( replicateM , when, (<=<))
import DA.Assert
import Main.MyApp.Money
import DA.Next.Map qualified as M
import Main.MyApp.Notes
import DA.Either qualified as E
import DA.List qualified as L
import DA.Next.Map( Map)
import Main.MyApp.Bank
import DA.Finance.Base.RollConvention
import DA.Finance.Instrument.Equity.CashDividend
import DA.Finance.Instrument.Equity.StockSplit
import SomethingElse.Calculation
import Main.MyApp.CounterOffer
import Test.MyApp.Bank
import DA.Finance.Trade.Dvp
import DA.Finance.Trade.Dvp.Settlement
import Test.MyApp.Money
import DA.Time qualified as T
import DA.Finance.Trade.SettlementInstruction
import Test.MyApp.Notes
    import DA.Finance.Types
import DA.Finance.Utils


-- | hello
hello : Text -> Text
hello x =
  "hi there " <> x
