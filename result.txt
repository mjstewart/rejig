-- line1 a
-- line2 a

-- line1 b

{- block

      comment in here
-}
{-# OPTIONS_GHC -Wno-orphans #-}

{-# LANGUAGE FlexibleInstances #-}

-- NOTE(MH): We define 4 detail levels:
-- -2: Omit all type information, kind annotations, package ids and location information.
-- -1: Omit all package ids and all location information.
module DA.Daml.LF.Ast.Pretty
  ( map
  , (<##>)
  , (<:>)
  )
where

--------------------------------------------------------------------------------

-- standard imports

import Control.Lens

import Control.Lens.Ast
  ( rightSpine
  )
import Data.Foldable
  ( toList
  )

import qualified Data.NameMap as NM
import qualified Data.Ratio as Ratio
import qualified Data.Text as T
import qualified Data.Time.Clock.POSIX as Clock.Posix
import qualified Data.Time.Format as Time.Format

-- imports by DA.*

import DA.Daml.LF.Ast.Optics
import DA.Daml.LF.Ast.TypeLevelNat
import DA.Daml.LF.Ast.Util

import DA.Daml.LF.Ast.Base hiding
  ( dataCons
  )
import DA.Pretty hiding
  ( keyword_
  , pretty
  , type_
  )

--------------------------------------------------------------------------------

-- NOTE(MH): We define 4 detail levels:
-- -2: Omit all type information, kind annotations, package ids and location information.
-- -1: Omit all package ids and all location information.
-- 0 (default): Omit all location information.
-- 1: Print everything.
levelHasTypes, levelHasKinds, levelHasPackageIds, levelHasLocations :: PrettyLevel -> Bool
levelHasTypes lvl = lvl >= PrettyLevel (-1)
levelHasKinds lvl = lvl >= PrettyLevel (-1)
levelHasPackageIds lvl = lvl >= PrettyLevel 0
levelHasLocations lvl = lvl >= PrettyLevel 1
