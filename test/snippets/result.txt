-- rejig formatting example

-- another comment       1
-- another comment2
--
--
--          another comment 3

{-# LANGUAGE Apple #-}
{-# LANGUAGE Batman #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE TypeFamilies #-}

-- |
-- Module      :  Text.Megaparsec.Char
-- Copyright   :  © 2015–present Megaparsec contributors
--                © 2007 Paolo Martini
--                © 1999–2001 Daan Leijen
-- License     :  FreeBSD
--
-- Maintainer  :  Mark Karpov <markkarpov92@gmail.com>
-- Stability   :  experimental
-- Portability :  non-portable
--
-- Commonly used character parsers.

{- x
-}
{- 
-}
{- z
-}
{- one line
-}
{- should Base
        here
                              and
                   here
and here
-}

{-| should Base
  here
  and here
  and here
-}

{-|
-}

--Megaparsec
--you

-- some other comment

{- hello there
whats up

    NOT MUCH
is this the end?
-}

{- is this working
-}
{- yup should be
-}

-- why owuldnt it
-- not sure

-- but lets see right!
-- but lets see right!

-- but lets see right!

module MyApp.Main
where

--------------------------------------------------------------------------------

-- standard imports

import App.A
import App.B
import App.C
import Base.Utils
import MyApp.Test.Notes

-- imports by DA*

import DA.Foldable
  ( mapA_
  )
import DA.Optional
  ( catOptionals
  , fromSomeNote
  )

-- imports by DA.Finance*

import DA.Finance.Types
import DA.Finance.Utils

--------------------------------------------------------------------------------

-- | hello
hello : Text -> Text
hello x =
  "hi there " <> x
